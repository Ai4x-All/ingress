syntax = "proto3";

package livekit;

import "google/protobuf/empty.proto";
import "livekit_models.proto";

option go_package = "github.com/livekit/protocol/livekit/ingress";

service Ingress {
    rpc CreateIngress(CreateIngressRequest) returns (IngressInfo);
    rpc ListIngress(ListIngressRequest) returns (ListIngressResponse);
    rpc DeleteIngress(DeleteIngressRequest) returns (google.protobuf.Empty);
}

enum IngressInput {
    FILE_INPUT = 0;
    RTMP_INPUT = 1;
    SRT_INPUT = 2;
    URL_INPUT = 3;
}


message IngressInfo {
    enum State {
        ENDPOINT_WAITING = 0;
        ENDPOINT_ACTIVE = 1;
        ENDPOINT_ENDED = 2;
    }
    string id = 1;
    IngressInput input_type = 2;
    State state = 3;
    string room = 4;
    string participant_identity = 5;
    string participant_name = 6;
    bool enable_simulcast = 7;
    string url = 8;
    repeated TrackInfo tracks = 9;
}


message CreateIngressRequest {
    IngressInput input_type = 1;
    string room_name = 2;
    string participant_identity = 3;
    string participant_name = 4;
    bool enable_simulcast = 5;
    IngressAudioOptions audio = 6;
    IngressVideoOptions video = 7;
    // required only for URL_INPUT
    string url = 8;
}

message IngressAudioOptions {
    string name = 1;
    TrackSource source = 2;
    string mime_type = 3;
    uint32 bitrate = 4;
    bool dtx = 5;
    uint32 channels = 6;
}

message IngressVideoOptions {
    string name = 1;
    TrackSource source = 2;
    string mime_type = 3;
    // layers to publish, when empty,
    // will default to input video at default bitrates
    repeated VideoLayer layers = 4;
}

message ListIngressRequest {
    // when blank, lists all ingress endpoints
    string room = 1;
}

message ListIngressResponse {
    repeated IngressInfo items = 1;
}

message DeleteIngressRequest {
    string id = 1;
}
